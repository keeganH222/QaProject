@model QaProject.Models.Question
@{
    ViewBag.Title = "Question";
}

<main class="Question_Details">
    <h2 class="Question_title">@Model.Title</h2>
    <section class="Question_Content">
        <div class="Scroll_Controller">
            <div class="votes_container">
                @if (User.Identity.IsAuthenticated && !string.IsNullOrEmpty(ViewBag.userId) &&Model.OwnerId != ViewBag.userId)
                {
                    <button class="votes" id="upVote" data-url="@Url.Action("UpVoteItem")" data-userid="@ViewBag.userId" data-type="question" data-itemid="@Model.Id">UpVote</button>
                    <button class="votes" id="downVote" data-url="@Url.Action("DownVoteItem")" data-userid="@ViewBag.userId" data-type="question" data-itemid="@Model.Id">DownVote</button>
                }
                <div class="Vote_Count_Container">Votes:<p class="vote_Count">@ViewBag.VoteCount</p></div>
            </div>
            <p>@Model.Description</p>
        </div>
        <div class="tagContainer">
            @foreach (var tag in Model.Tags)
            {
                <span class="shownTags">
                    @tag.Name
                </span>
            }
        </div>

        <div class="Question_Comments">
            @if (Model.Comments.Count > 0)
            {
                foreach (var comment in Model.Comments)
                {
                    Html.Partial("Comment", comment);
                }
            }
            <a class="CommentLink Question">Add a Comment</a>
            @if (User.Identity.IsAuthenticated)
            {
                using (Html.BeginForm("AddComment", "HomeController", FormMethod.Post, new { @class = "hidden" }))
                {
                    Html.Partial("AddComment", new QaProject.Models.Comment());
                }
            }
        </div>
    </section>
    <section class="Answer_Container">
        @if (Model.Answers.Count > 0)
        {
            foreach (var answer in Model.Answers)
            {
                Html.Partial("Answer", answer);
            }
        }
        <a class="AnswerLink Question">Answer</a>
        @using (Html.BeginForm("AddAnswer", "HomeController"))
        {
            Html.Partial("AddAnswer", new QaProject.Models.Answer());
        }
    </section>
</main>

<script>
    jQuery(document).ready(function () {
        $("#upVote").click((e) => {
            let url = $("#upVote").data("url");
            let itemid = $("#upVote").data("itemid");
            let userid = $("#upVote").data("userid");
            let type = $("#upVote").data("type");
            let jsonObj = { itemType: type, itemId: itemid, userId: userid, };
            $.ajax({
                type: "POST",
                url: url,
                contentType: 'application/json',
                data: JSON.stringify(jsonObj),
                traditional: true
            }).done((resultType) => {                
                changeVoteCount(resultType);
            });
        });
        $("#downVote").click((e) => {
            let url = $("#downVote").data("url");
            let itemid = $("#downVote").data("itemid");
            let userid = $("#downVote").data("userid");
            let type = $("#downVote").data("type");
            let jsonObj = { itemType: type, itemId: id, userId: type, };
            $.ajax({
                type: "POST",
                url: url,
                contentType: 'application/json',
                data: JSON.stringify(jsonObj),
                traditional: true
            }).done((resultType) => {
                changeVoteCount(resultType);
            });
        });
        function changeVoteCount(voteType) {
            let voteCnter = $(".vote_Count").text();
            if (voteType === "UpVote") {
                voteCnter += 1;
            }
            else {
                voteCnter -= 1;
            }
            $(".vote_Count").text(voteCnter);
        }
    });
</script>