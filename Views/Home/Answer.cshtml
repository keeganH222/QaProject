@model QaProject.Models.AnswerViewModel
@{
    Layout = null;
}


<div class="Answer">
    <div class="Answer_Container">
        <div class="Answer_Vote">
            <div>
                @if (!string.IsNullOrEmpty(ViewBag.userId) && ViewBag.userId != Model.answer.OwnerId && !Model.answer.UpVotes.Any(u => u.userId == ViewBag.userId) && !Model.answer.DownVotes.Any(d => d.userId == ViewBag.userId))
                {
                    Html.RenderPartial("VoteButton", new QaProject.Models.ButtonViewModel { Id = Model.answer.Id, UserId = ViewBag.userId, Type = "answer" });
                }
            </div>
            <p id="@("vote_count_answer_" + Model.answer.Id)">@(Model.answer.UpVotes.Count() - Model.answer.DownVotes.Count())</p>
        </div>
        <div class="Answer_Content">@Model.answer.Content</div>
        <div class="Answer_AuthorCtn">
            <div class="Answer_Author">@Model.userName</div>
            <div class="Answer_Date">@Model.answer.PostedOn</div>
        </div>
    </div>
    <div class="Answer_Comments_Container">
        <div class="answer_comment" id="@("answer_comment_"+Model.answer.Id)">
            @if (Model.answer.Comments.Count() > 0)
            {
                foreach (var comment in Model.answer.Comments)
                {
                    Html.RenderPartial("Comment", new QaProject.Models.CommentViewModel { comment = comment, userName = comment.Owner.UserName });
                }
            }
        </div>
        @if(User.Identity.IsAuthenticated)
        {
            <div id="@("addCommentAnswer" + Model.answer.Id)">
                <button data-url="@Url.Action("AddComment", "Home", new { itemId = Model.answer.Id, type = "answer" })" data-answerid="@Model.answer.Id" class="addComment">Add Comment</button>
            </div>
        }
    </div>
</div>

<script>
    jQuery(document).ready(function () {
        $(".addComment").click(getTextAreaForComment);
    });
</script>