@model QaProject.Models.Question

@{
    ViewBag.Title = "Post Your Question";
}

<h2>postQuestion</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Please Choose Your tags", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <button type="button" name="btnLink" id="btnLink" class="btn btn-primary" data-url="@Url.Action("addTag")">Open Pop</button>
                <div id="DisplayTags"></div>
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Description")
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Post" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<div class="modal fade" id="ModalPopUp" role="dialog">
</div>


<script src="https://code.jquery.com/jquery-1.10.0.min.js"
        integrity="sha256-2+LznWeWgL7AJ1ciaIG5rFP7GKemzzl+K75tRyTByOE="
        crossorigin="anonymous"></script>
<script>
    jQuery("#btnLink").click(function () {       
        var url = $(this).data('url');
        $.get(url).done(data => {
            $('#ModalPopUp').html(data);
        });
        $('#ModalPopUp').modal('toggle');
    })
    jQuery("#btnSave").click(Save);
    var Idarr = new Array();
    var NameArr = new Array();
    var removeArr = new Array();
    function Save(e) {
        var url = $('#btnSave').data('url');
        $('.tags').each(function (e) {
            if ($(this).prop('checked')) {
                var unique = true;
                Idarr.forEach(e => e === $(this).data('id') ? unique = false : 1 + 1);
                if (unique) {
                    Idarr.push($(this).data('id'));
                    NameArr.push($(this).data('name'));
                }
                let index = removeArr.indexOf($(this).data('name'));
                if (index !== -1) {
                    removeArr[index] = removeArr.pop();
                }
            }
            else {
                let index = removeArr.indexOf($(this).data('name'));
                let Nameindex = NameArr.indexOf($(this).data('name'));
                
                if (index === -1) {
                    removeArr.push($(this).data('name'));
                }
                if (Nameindex != -1) {
                    
                    if (Nameindex === NameArr.length - 1 && NameArr.length > 2) {
                        alert("first test");
                        NameArr[Nameindex] = NameArr.shift();
                        Idarr[Nameindex] = Idarr.shift();
                    }
                    else if (NameArr.length === 2) {
                        if (Nameindex === NameArr.length - 1) {
                            alert("second test");
                            NameArr.pop();
                            Idarr.pop();
                        }
                        else {
                            NameArr.shift();
                            Idarr.shift();
                        }
                        
                    }
                    else {
                        alert("third test");
                        NameArr = new Array();
                        Idarr = new Array();
                    }
                    
                }
            }
        });
        var jsonObj = JSON.stringify(Idarr);
        $.ajax({
            type: 'Post',
            url: url,
            contentType: 'application/json',
            data: jsonObj,
            traditional: true
        }).done((result) => {
            Display();
        });
    };
    function Display() {
        $('#DivClose').click();
        var divDisplay = document.querySelector('#DisplayTags');
        removeArr.forEach((name) => {

            var tags = document.getElementsByClassName(name);
            for (let i = 0; i < tags.length; i++) {

                if (tags[i] !== undefined) {
                    divDisplay.removeChild(tags[i]);
                }
            }
        });
        NameArr.forEach((name) => {
            var HaveYouBeenSelected = $("." + name);
            if (!HaveYouBeenSelected.hasClass(name)) {
                var span = document.createElement("span");
                var text = document.createTextNode(name);
                span.append(text);
                $(span).addClass('tagName');
                var button = document.createElement('button');
                var x = document.createTextNode('x');
                button.append(x);
                button.setAttribute('data-name', name);
                button.setAttribute('data-url',@Html.Action("removeTag"));
                $(button).addClass('removeTag');
                span.append(button);
                var divContainer = $("<div class='shownTags'></div>").html(span);
                $('#DisplayTags').append(span);
            }
        });
        $('.removeTag').click(removeTag);
    };
    function removeTag(e) {
        let TagName = $(this).data('name');
        let url = $(this).data('url');
        let jsonObj = JSON.stringify(TagName);
        $.ajax({
            url: url,
            contentType: 'application/json',
            data: jsonObj,
            traditional: true
        }).done(() => {

        });
    }
</script>
